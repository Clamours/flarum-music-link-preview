{"version":3,"file":"admin.js","mappings":";;;;;;;;;;;;;;AAAA;AAEA,IAAMC,UAAU,GAAG,wBAAnB;AAEAD,wEAAA,CAAqB,+BAArB,EAAsD,YAAM;EAC1DA,4EAAA,CACOC,UAAU,GAAG,EADpB,EAEGI,eAFH,CAEmB;IACfC,OAAO,EAAEL,UAAU,GAAG,qBADP;IAEfM,KAAK,EAAEP,wEAAA,CAAqBC,UAAU,GAAG,0CAAlC,CAFQ;IAGfS,IAAI,EAAEV,wEAAA,CAAqBC,UAAU,GAAG,yCAAlC,CAHS;IAIfU,IAAI,EAAE;EAJS,CAFnB,EAQGN,eARH,CAQmB;IACfC,OAAO,EAAEL,UAAU,GAAG,YADP;IAEfM,KAAK,EAAEP,wEAAA,CAAqBC,UAAU,GAAG,iCAAlC,CAFQ;IAGfS,IAAI,EAAEV,wEAAA,CAAqBC,UAAU,GAAG,gCAAlC,CAHS;IAIfW,WAAW,EAAEZ,wEAAA,CAAqBC,UAAU,GAAG,uCAAlC,CAJE;IAKfU,IAAI,EAAE;EALS,CARnB;AAeD,CAhBD;;;;;;;;;;;ACJA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D","sources":["webpack://@datlechin/flarum-link-preview/./src/admin/index.js","webpack://@datlechin/flarum-link-preview/external root \"flarum.core.compat['admin/app']\"","webpack://@datlechin/flarum-link-preview/webpack/bootstrap","webpack://@datlechin/flarum-link-preview/webpack/runtime/compat get default export","webpack://@datlechin/flarum-link-preview/webpack/runtime/define property getters","webpack://@datlechin/flarum-link-preview/webpack/runtime/hasOwnProperty shorthand","webpack://@datlechin/flarum-link-preview/webpack/runtime/make namespace object","webpack://@datlechin/flarum-link-preview/./admin.js"],"sourcesContent":["import app from 'flarum/admin/app';\n\nconst EXT_PREFIX = 'datlechin-link-preview';\n\napp.initializers.add('datlechin/flarum-link-preview', () => {\n  app.extensionData\n    .for(EXT_PREFIX + '')\n    .registerSetting({\n      setting: EXT_PREFIX + '.convert_media_urls',\n      label: app.translator.trans(EXT_PREFIX + '.admin.settings.convert_media_urls_label'),\n      help: app.translator.trans(EXT_PREFIX + '.admin.settings.convert_media_urls_help'),\n      type: 'checkbox',\n    })\n    .registerSetting({\n      setting: EXT_PREFIX + '.blacklist',\n      label: app.translator.trans(EXT_PREFIX + '.admin.settings.blacklist_label'),\n      help: app.translator.trans(EXT_PREFIX + '.admin.settings.blacklist_help'),\n      placeholder: app.translator.trans(EXT_PREFIX + '.admin.settings.blacklist_placeholder'),\n      type: 'textarea',\n    });\n});\n","module.exports = flarum.core.compat['admin/app'];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * from './src/admin';\n"],"names":["app","EXT_PREFIX","initializers","add","extensionData","registerSetting","setting","label","translator","trans","help","type","placeholder"],"sourceRoot":""}